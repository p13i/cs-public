version: "3.9"

x-shared: &shared
  image: cs-app-base:latest
  depends_on:
    base:
      condition: service_completed_successfully
  user: "${UID}:${GID}"
  env_file: .env
  restart: unless-stopped

services:
  base:
    image: cs-app-base:latest
    build:
      context: .
      dockerfile: Dockerfile

  web:
    <<: *shared
    container_name: cs-web
    volumes:
      - ./data:/app/data
    ports:
      - "${PORT:-8080}:8080"
    command: "make setup-db-dirs app"
    # internal DNS: other services reach this as http://web:8080
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS http://localhost:8080/health/ || exit 1"
        ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s

  logparser:
    <<: *shared
    container_name: cs-logparser
    command: "make parse-logs-job"
    volumes:
      - ./data:/app/data

  cite.pub:
    <<: *shared
    container_name: cs-cite.pub
    volumes:
      - ./data/cite.pub:/app/data/cite.pub
    ports:
      - "${PORT:-8091}:8091"
    command: "make cite.pub"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS http://localhost:8091 || exit 1"
        ]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s

  ngrok:
    image: ngrok/ngrok:latest
    container_name: cs-ngrok
    # depends_on:
    #   web:
    #     condition: service_healthy
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml:ro
    command: start --config /etc/ngrok.yml cs
    ports:
      - "4040:4040"
    restart: unless-stopped
