Usage: make <target> [VAR=val]

Targets:
  a                        Alias for `app`.
  app                      Run the web app and tee logs to data/app.log.
  assert-no-diffs          Fail if repo has unstaged/staged or untracked changes.
  b                        Alias for `build`.
  build                    Builds the project.
  build-app                Build the app binary (debug flags enabled).
  build-index.js           Builds the web bundle (index.js) via Bazel.
  build-up-in-workflow     Builds a Compose project for the Github Action workflow context.
  cg                       Alias for `codegen`.
  check_visibility         Ensure Bazel target visibility for public use.
  ci                       Uses all available checks.
  ci-local                 Uses all available checks.
  cite.pub                 cite.pub rule (auto)
  cite.pub-mkdirs          cite.pub-mkdirs rule (auto)
  clean                    Remove all Bazel outputs (expunge).
  clean-docker             Remove this project's containers/images/volumes and Docker caches.
  codegen                  (Deprecated) Code generation driver.
  dbuild                   Builds a Compose project.
  dexec                    Runs command inside active container.
  down                     Stops Compose services.
  drun                     SERVICE=web COMMAND="make build" make drun
  enforce_header_guards    Enforce header guards across the 'cs' tree.
  font-demo                Render a text demo to the console.
  freeport                 Free TCP port $(PORT) by killing listeners (uses $(SUDO)).
  gha                      gha rule (auto)
  gha-bazel                gha-bazel rule (auto)
  gha-devcontainer         gha-devcontainer rule (auto)
  gha-docker               gha-docker rule (auto)
  gpt                      Runs toy GPT implementation.
  help                     Show this help message: Self-documenting Make help [ChatGPT]
  help.txt                 Write a plain-text snapshot of `make help` (strip ANSI + dir chatter).
  inline-using             Remove usings from C++ header files.
  l                        Alias for `lint`.
  lint                     Run all linters/formatters.
  lint-add-acls            Dry-run adding ACLs to public files.
  lint-bazel               Lint Bazel files with buildifier.
  lint-cc                  Format C/C++ sources with clang-format.
  lint-makefile            Lint/organize the top-level Makefile in-place (backup saved).
  lint-md-html-yaml        Format Markdown/HTML/YAML/JSON with Prettier.
  lint-newfile-examples    Generate example files to validate templates.
  lint-python              Format Python code with Black.
  lint-rust                Format Rust files with Prettier Rust plugin.
  loop                     Re-run `make app` until it succeeds.
  mnist                    Run the MNIST demo with the given model.json.
  move_cc                  Refactor/move C++ files (SRC -> DST).
  newfile                  Create a new file from template (requires NEWFILE=path).
  ngrok                    Expose local port 8080 at fixed domain via ngrok.
  parse-logs               Parse /app/data/app.log into /app/data/app_logs.
  parse-logs-job           Run parse-logs every $(INTERVAL)s until interrupted.
  probe                    Run the HTTP prober utility.
  pub                      Publishes the source code, respecting acl.json files, into ../cs-public
  release                  Updates the .env file with the latest COMMIT hash and commits a release.
  serve                    serve rule (auto)
  serve-help               Serve help.md rendered at http://localhost:$(DOCS_PORT)/ using a venv-isolated 'grip'
  serve-site               Serve ./site via a local HTTP server.
  setup                    One-time dev setup (linters, DB dirs, Node).
  setup-db-dirs            Create local data directories for app state.
  setup-lint               Install buildifier, clang-format, and Black.
  setup-ngrok              Install ngrok apt repo and package.
  singlefile               singlefile rule (auto)
  stash                    Commit all changes to branch $(BRANCH), push, then switch back to main.
  stress                   Loop: clean, build, and test repeatedly until stopped.
  t                        Alias for `test`.
  test                     Runs all tests with full output.
  up                       Starts a Compose project.
  update-env               update-env rule (auto)
  use-usings               Normalize/insert C++ `using` declarations.
  www                      Serve live logs UI and restart `make up` when upstream changes (Bazel Python).
